Starting on 10-5 at 16:54:29

Question q8
===========

[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
all food,,,.. [[False, False, False, False, False], [False, False, True, True, False], [False, True, True, True, False], [False, True, True, True, False], [False, True, True, True, False], [False, False, False, False, False]]
all fodd <type 'list'>
a_food type <type 'bool'>
all wall  [[True, True, True, True, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, True, True, True, True]]
type_all_wall <type 'list'>
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
*** PASS: test_cases/q8/closest_dot_1.test
*** 	pacman layout:		Test 1
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
all food,,,.. [[False, False, False, False, False, False, False, False, False, False, False], [False, False, False, False, False, False, False, False, False, False, False], [False, False, True, True, True, True, True, True, True, False, False], [False, False, False, False, False, False, False, False, True, False, False], [False, False, True, True, True, True, True, True, True, False, False], [False, False, True, False, False, False, False, False, False, False, False], [False, False, True, True, True, True, True, True, True, False, False], [False, False, False, False, False, False, False, False, True, False, False], [False, False, True, True, True, True, True, True, True, False, False], [False, False, False, False, False, False, False, False, False, False, False]]
all fodd <type 'list'>
a_food type <type 'bool'>
all wall  [[True, True, True, True, True, True, True, True, True, True, True], [True, False, False, False, False, False, False, False, False, False, True], [True, False, False, False, False, False, False, False, False, False, True], [True, False, True, True, True, True, True, True, False, False, True], [True, False, False, False, False, False, False, False, False, False, True], [True, False, False, True, True, True, True, True, True, False, True], [True, False, False, False, False, False, False, False, False, False, True], [True, False, True, True, True, True, True, True, False, False, True], [True, False, False, False, False, False, False, False, False, False, True], [True, True, True, True, True, True, True, True, True, True, True]]
type_all_wall <type 'list'>
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
*** PASS: test_cases/q8/closest_dot_10.test
*** 	pacman layout:		Test 10
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
all food,,,.. [[False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], [False, True, False, False, False, False, False, False, True, False, False, False, False, False, False, False, True, True, False, False, False, False, False, False], [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]]
all fodd <type 'list'>
a_food type <type 'bool'>
all wall  [[True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True], [True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True], [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]]
type_all_wall <type 'list'>
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
*** PASS: test_cases/q8/closest_dot_11.test
*** 	pacman layout:		Test 11
*** 	solution length:		2
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
all food,,,.. [[False, False, False, False, False, False, False], [False, False, False, False, False, False, False], [False, True, False, False, False, True, False], [False, False, False, False, False, False, False]]
all fodd <type 'list'>
a_food type <type 'bool'>
all wall  [[True, True, True, True, True, True, True], [True, False, False, False, False, False, True], [True, False, False, False, False, False, True], [True, True, True, True, True, True, True]]
type_all_wall <type 'list'>
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
*** PASS: test_cases/q8/closest_dot_12.test
*** 	pacman layout:		Test 12
*** 	solution length:		3
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
all food,,,.. [[False, False, False, False, False, False], [False, True, True, True, True, False], [False, True, False, False, False, False], [False, True, False, False, True, False], [False, False, False, False, True, False], [False, False, False, False, True, False], [False, True, True, True, True, False], [False, False, False, False, False, False]]
all fodd <type 'list'>
a_food type <type 'bool'>
all wall  [[True, True, True, True, True, True], [True, False, False, False, False, True], [True, False, True, True, True, True], [True, False, False, False, False, True], [True, False, True, True, False, True], [True, False, True, True, False, True], [True, False, False, False, False, True], [True, True, True, True, True, True]]
type_all_wall <type 'list'>
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
*** PASS: test_cases/q8/closest_dot_13.test
*** 	pacman layout:		Test 13
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
all food,,,.. [[False, False, False, False, False], [False, False, True, False, False], [False, False, False, False, False], [False, False, True, False, False], [False, False, True, True, False], [False, False, False, False, False]]
all fodd <type 'list'>
a_food type <type 'bool'>
all wall  [[True, True, True, True, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, True, True, True, True]]
type_all_wall <type 'list'>
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
*** PASS: test_cases/q8/closest_dot_2.test
*** 	pacman layout:		Test 2
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
all food,,,.. [[False, False, False, False, False], [False, False, True, False, False], [False, False, False, False, False], [False, False, False, False, False], [False, False, True, False, False], [False, False, True, True, False], [False, False, False, False, False]]
all fodd <type 'list'>
a_food type <type 'bool'>
all wall  [[True, True, True, True, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, True, True, True, True]]
type_all_wall <type 'list'>
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
*** PASS: test_cases/q8/closest_dot_3.test
*** 	pacman layout:		Test 3
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
all food,,,.. [[False, False, False, False, False], [False, False, False, False, False], [False, False, False, False, False], [False, False, False, False, False], [False, True, True, True, False], [False, False, False, False, False]]
all fodd <type 'list'>
a_food type <type 'bool'>
all wall  [[True, True, True, True, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, True, True, True, True]]
type_all_wall <type 'list'>
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
*** PASS: test_cases/q8/closest_dot_4.test
*** 	pacman layout:		Test 4
*** 	solution length:		3
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
all food,,,.. [[False, False, False, False, False], [False, False, False, False, False], [False, True, False, False, False], [False, False, False, True, False], [False, True, True, False, False], [False, False, False, False, False]]
all fodd <type 'list'>
a_food type <type 'bool'>
all wall  [[True, True, True, True, True], [True, False, False, False, True], [True, False, True, True, True], [True, False, True, False, True], [True, False, False, False, True], [True, True, True, True, True]]
type_all_wall <type 'list'>
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
*** PASS: test_cases/q8/closest_dot_5.test
*** 	pacman layout:		Test 5
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
all food,,,.. [[False, False, False, False, False], [False, False, True, False, False], [False, False, False, False, False], [False, False, False, False, False], [False, False, False, False, False], [False, False, False, False, False], [False, False, True, False, False], [False, False, False, False, False]]
all fodd <type 'list'>
a_food type <type 'bool'>
all wall  [[True, True, True, True, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, True, True, True, True]]
type_all_wall <type 'list'>
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
*** PASS: test_cases/q8/closest_dot_6.test
*** 	pacman layout:		Test 6
*** 	solution length:		2
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
all food,,,.. [[False, False, False, False, False], [False, True, False, False, False], [False, False, False, False, False], [False, False, False, False, False], [False, True, False, False, False], [False, False, False, False, False], [False, True, False, False, False], [False, False, False, False, False]]
all fodd <type 'list'>
a_food type <type 'bool'>
all wall  [[True, True, True, True, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, True, True, True, True]]
type_all_wall <type 'list'>
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
*** PASS: test_cases/q8/closest_dot_7.test
*** 	pacman layout:		Test 7
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
all food,,,.. [[False, False, False, False, False], [False, False, False, False, False], [False, False, False, False, False], [False, False, False, False, False], [False, False, False, False, False], [False, False, False, False, False], [False, False, True, False, False], [False, False, False, False, False]]
all fodd <type 'list'>
a_food type <type 'bool'>
all wall  [[True, True, True, True, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, True, True, True, True]]
type_all_wall <type 'list'>
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
*** PASS: test_cases/q8/closest_dot_8.test
*** 	pacman layout:		Test 8
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
all food,,,.. [[False, False, False, False, False], [False, False, False, False, False], [False, False, True, False, False], [False, False, False, False, False], [False, False, False, False, False], [False, False, False, False, False], [False, False, True, False, False], [False, False, False, False, False]]
all fodd <type 'list'>
a_food type <type 'bool'>
all wall  [[True, True, True, True, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, False, False, False, True], [True, True, True, True, True]]
type_all_wall <type 'list'>
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
Actions in vector,  North
Actions in vector,  South
Actions in vector,  East
Actions in vector,  West
*** PASS: test_cases/q8/closest_dot_9.test
*** 	pacman layout:		Test 9
*** 	solution length:		1

### Question q8: 3/3 ###


Finished at 16:54:29

Testing Results (grades subject to additional tests after submission)
==================
Question q8: 3/3
------------------
Total: 3/3

TO OBTAIN MARKS YOU MUST SUBMIT YOUR CODE USING MarkUs.

